name: 'Update Configuration'

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          pip install pyyaml requests  # 同时安装 pyyaml 和 requests
          
      - name: Run the overwrite script
        run: |
          python overwrite.py
          
      - name: Commit and push if changes are made
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check for file changes
          if [[ `git status --porcelain` ]]; then
            git add .
            git commit -m "Auto update configuration"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Check if config.yaml has changed
        id: check_changes
        run: |
          echo "Checking if config.yaml has changed..."
          if git diff --quiet HEAD^ HEAD -- configs/config.yaml; then
            echo "No changes detected in config.yaml."
            echo "changed=false" >> $GITHUB_ENV
          else
            echo "config.yaml has changed!"
            echo "changed=true" >> $GITHUB_ENV
          fi

      - name: Update Gist if config.yaml has changed
        if: env.changed == 'true'
        env:
          GH_PAT_GIST: ${{ secrets.GH_PAT_GIST }}  # 从 Secrets 获取 Personal Access Token
        run: |
          GIST_ID="5b19b57c1beb1ba71f29738abc84a6be"
          FILE_NAME="config.yaml"

          echo "Reading content of configs/config.yaml..."
          CONTENT=$(jq -Rs '.' < configs/config.yaml)

          # 发送 PATCH 请求更新 Gist
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X PATCH "https://api.github.com/gists/$GIST_ID" \
            -H "Authorization: token $GH_PAT_GIST" \
            -H "Content-Type: application/json" \
            -d "{\"files\": {\"$FILE_NAME\": {\"content\": $CONTENT}}}")

          echo "GitHub API Response Code: $RESPONSE"
